== Flopsy: A wrapper for the 0.8.x Bunny AMQP gem

This gem intends to simplify the Bunny API, making it easier to set up and manage a project that interfaces with RabbitMQ.  For example, publishing a message is as simple as

     Flopsy.publish(:my_queue, {foo: 'bar'})

=== Environment

Flopsy provides a convenient way to set up an environment for a Rails or non-Rails Ruby project.

     Flopsy::Environment.define do |b|
       b.host = 'localhost'
       b.user = 'guest'
       b.pass = 'password'
       b.vhost = '/development'
     end

Load this with the rest of your configuration files.

=== Filters

Flopsy also provides a way to define message filters for publishing and consuming:

     Flopsy::Filter.define do |f|
       f.on_publish {|msg| msg.to_json}
       f.on_consume {|msg| JSON.parse(msg)}
     end

=== Exceptions

You can define exception handlers specifically for published or consumed messages, or generally for all messages:

     Flopsy::ExceptionHandler.register(:all) do |exception, info|
       # do something
     end

=== Consumers

Finally, Flopsy comes with a Consumer class for long-running message consumers:

     class MessageHandler
       def process(msg)
         # do something
       end
     end

     Flopsy::Consumer.start(:my_queue, MessageHandler.new)
